---
//https://daily-dev-tips.com/posts/astro-getting-related-articles-based-on-tags/
import PostPreviewCard from '$components/PostPreviewCard.astro';
import PostPreviewCardSmall from '$components/PostPreviewCardSmall.astro';

let fetchedPosts = await import.meta.globEager(`../pages/posts/*.md`);

const allPosts = Object.keys(fetchedPosts).map((key) => {
    const post = fetchedPosts[key];
    const url = key.replace("../pages/", "/").replace(".md", "/");
    const item = { ...post, url };
    return item;
});

// Retrieve the props from the component
const { tags, currentPathname } = Astro.props;

const searchTagsCount = tags.length;

const mappedTags = allPosts
  .filter(({ url }) => url !== currentPathname)
  .filter((post) => !post.frontmatter.draft)
  .filter((a) => new Date(a.frontmatter.pubDate) <= new Date())
  .sort(
      (a, b) => new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf()
    )
  .reduce(
    (filtered, article) => {
      // nice use of type coercion: true => 1, false => 0, so we can add a boolean to number here
      const foundTagsCount = tags.reduce(
        (count, tag) => count + article.frontmatter.tags.includes(tag),
        0
      );
      const amount =
        searchTagsCount === foundTagsCount
          ? "all"
          : foundTagsCount > 1
          ? "some"
          : foundTagsCount
          ? "one"
          : "none";
      filtered[amount].push(article);
      return filtered;
    },
    { all: [], some: [], one: [], none: [] }
  );
const { all, some, one, none } = mappedTags;
const output = [...all, ...some, ...one, ...none];

// console.log("#### RelatedArticle.astro ######")
// console.log(JSON.stringify(mappedTags[1], false, 2));
// console.log(JSON.stringify(output[0], false, 2));
---
<section class="-mx-4 md:bg-white md:pt-8">
  <div class="container mx-auto ">
    <h2  class="mt-3 text-gray-800 text-2xl font-bold my-2">Releated posts</h2>
    <div class="container md:mx-auto">
      <div class="mx-0 md:-mx-4 grid grid-cols-1 md:grid-cols-2">
        <PostPreviewCardSmall post={output[0]} />
        <PostPreviewCardSmall post={output[1]} />  
        <!-- <PostPreviewCard post={output[0]} /> -->
        <!-- <PostPreviewCard post={output[1]} /> -->
      </div>
    </div>
  </div>
</section>