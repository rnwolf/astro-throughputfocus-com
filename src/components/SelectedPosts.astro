---
//https://daily-dev-tips.com/posts/astro-getting-related-articles-based-on-tags/
import PostPreviewCard from '$components/PostPreviewCard.astro';
import PostPreviewCardSmall from '$components/PostPreviewCardSmall.astro';


let fetchedPosts = await import.meta.globEager(`../pages/posts/*.md`);

const allPosts = Object.keys(fetchedPosts).map((key) => {
    const post = fetchedPosts[key];
    const url = key.replace("../pages/", "/").replace(".md", "/");
    const item = { ...post, url };
    return item;
});

const urls = ["/posts/someblogpost0/","/posts/someblogpost1/","/posts/someblogpost2/"];


// now filter to only posts in the urls array,
// these will be rendered below in the markup.
let selectedPosts = allPosts.filter((p) => { 
   return urls.includes(p.url); 
 });

// console.log(JSON.stringify(selectedPosts, false, 2));

---

	<div class="h-full px-6 py-12 lg:flex lg:justify-center lg:items-center">
		<div class="grid lg:grid-cols-2 gap-12 lg:gap-6">
			<!-- {selectedPosts.map((post) => <PostPreviewCard post={post} />)} -->
			{selectedPosts.map((post) => <PostPreviewCardSmall post={post} />)}
		</div>
	</div>